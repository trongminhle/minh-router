{"ast":null,"code":"var _jsxFileName = \"C:\\\\Udemy\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const params = useParams();\n  const data = useLoaderData();\n  const events = data.event;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: events.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Event ID: \", params.eventId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"83bg/f50vBzyoLkuhTA99J7W+qE=\", false, function () {\n  return [useParams, useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async ({\n  request,\n  params\n}) => {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useLoaderData","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","params","data","events","event","children","title","fileName","_jsxFileName","lineNumber","columnNumber","eventId","_c","loader","request","id","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Udemy/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { json, useLoaderData, useParams } from \"react-router-dom\";\r\n\r\nfunction EventDetailPage() {\r\n   const params = useParams();\r\n   const data = useLoaderData();\r\n   const events = data.event;\r\n\r\n   return (\r\n      <>\r\n         <h1>{events.title}</h1>\r\n         <p>Event ID: {params.eventId}</p>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport const loader = async ({ request, params }) => {\r\n   const id = params.eventId;\r\n\r\n   const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n   if (!response.ok) {\r\n      throw json({ message: \"Could not fetch details for selected event.\" }, { status: 500 });\r\n   } else {\r\n      return response;\r\n   }\r\n};\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElE,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,IAAI,GAAGT,aAAa,CAAC,CAAC;EAC5B,MAAMU,MAAM,GAAGD,IAAI,CAACE,KAAK;EAEzB,oBACGR,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACGT,OAAA;MAAAS,QAAA,EAAKF,MAAM,CAACG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBd,OAAA;MAAAS,QAAA,GAAG,YAAU,EAACJ,MAAM,CAACU,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAClC,CAAC;AAET;AAACV,EAAA,CAXQD,eAAe;EAAA,QACNL,SAAS,EACXD,aAAa;AAAA;AAAAmB,EAAA,GAFpBb,eAAe;AAaxB,eAAeA,eAAe;AAE9B,OAAO,MAAMc,MAAM,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEb;AAAO,CAAC,KAAK;EAClD,MAAMc,EAAE,GAAGd,MAAM,CAACU,OAAO;EAEzB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAElE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IACf,MAAM1B,IAAI,CAAC;MAAE2B,OAAO,EAAE;IAA8C,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC1F,CAAC,MAAM;IACJ,OAAOJ,QAAQ;EAClB;AACH,CAAC;AAAC,IAAAJ,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}