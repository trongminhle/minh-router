{"ast":null,"code":"var _jsxFileName = \"C:\\\\Udemy\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport { json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 11\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport const action = async ({\n  request,\n  params\n}) => {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    header: {\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8;application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event.\"\n    }, {\n      status: 500\n    });\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","header","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["C:/Udemy/12-adv-starting-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json } from \"react-router-dom\";\r\n\r\nimport EventForm from \"../components/EventForm\";\r\n\r\nfunction NewEventPage() {\r\n   return <EventForm />;\r\n}\r\n\r\nexport default NewEventPage;\r\n\r\nexport const action = async ({ request, params }) => {\r\n   const data = await request.formData();\r\n   const eventData = {\r\n      title: data.get(\"title\"),\r\n      image: data.get(\"image\"),\r\n      date: data.get(\"date\"),\r\n      description: data.get(\"description\"),\r\n   };\r\n\r\n   const response = await fetch(\"http://localhost:8080/events\", {\r\n      method: \"POST\",\r\n      header: {\r\n         \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8;application/json\",\r\n      },\r\n      body: JSON.stringify(eventData),\r\n   });\r\n\r\n   if (!response.ok) {\r\n      throw json({ message: \"Could not save event.\" }, { status: 500 });\r\n   }\r\n};\r\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AAEvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EACrB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvB;AAACC,EAAA,GAFQL,YAAY;AAIrB,eAAeA,YAAY;AAE3B,OAAO,MAAMM,MAAM,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAClD,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACtC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC1DC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACL,cAAc,EAAE;IACnB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EACjC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IACf,MAAM5B,IAAI,CAAC;MAAE6B,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACpE;AACH,CAAC;AAAC,IAAArB,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}